[{"/Users/retric/Desktop/ckb-react/src/router.tsx":"1","/Users/retric/Desktop/ckb-react/src/components/Learn.tsx":"2","/Users/retric/Desktop/ckb-react/src/api/blockchain.ts":"3","/Users/retric/Desktop/ckb-react/src/components/Wallets.tsx":"4","/Users/retric/Desktop/ckb-react/src/components/Cells.tsx":"5","/Users/retric/Desktop/ckb-react/src/components/widget/code.tsx":"6","/Users/retric/Desktop/ckb-react/src/components/widget/form.tsx":"7","/Users/retric/Desktop/ckb-react/src/components/Transaction.tsx":"8","/Users/retric/Desktop/ckb-react/src/components/widget/common_style.ts":"9","/Users/retric/Desktop/ckb-react/src/components/BeforeWeGetStarted.tsx":"10","/Users/retric/Desktop/ckb-react/src/components/Class1.tsx":"11","/Users/retric/Desktop/ckb-react/src/components/Class3.tsx":"12","/Users/retric/Desktop/ckb-react/src/components/Class4.tsx":"13","/Users/retric/Desktop/ckb-react/src/components/Class2.tsx":"14"},{"size":443,"mtime":1606571252247,"results":"15","hashOfConfig":"16"},{"size":701,"mtime":1606918695178,"results":"17","hashOfConfig":"16"},{"size":939,"mtime":1606912397620,"results":"18","hashOfConfig":"16"},{"size":1745,"mtime":1606905228916,"results":"19","hashOfConfig":"16"},{"size":1322,"mtime":1606912903833,"results":"20","hashOfConfig":"16"},{"size":328,"mtime":1606914580750,"results":"21","hashOfConfig":"16"},{"size":1322,"mtime":1606915336645,"results":"22","hashOfConfig":"16"},{"size":1357,"mtime":1606915749408,"results":"23","hashOfConfig":"16"},{"size":628,"mtime":1606916550495,"results":"24","hashOfConfig":"16"},{"size":2243,"mtime":1606916820775,"results":"25","hashOfConfig":"16"},{"size":1449,"mtime":1606919109719,"results":"26","hashOfConfig":"16"},{"size":316,"mtime":1606917946569,"results":"27","hashOfConfig":"16"},{"size":328,"mtime":1606917954135,"results":"28","hashOfConfig":"16"},{"size":688,"mtime":1606918077802,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x8qy3m",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/retric/Desktop/ckb-react/src/router.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/Learn.tsx",[],"/Users/retric/Desktop/ckb-react/src/api/blockchain.ts",[],["64","65"],"/Users/retric/Desktop/ckb-react/src/components/Wallets.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/Cells.tsx",["66"],"import React, { useState, useEffect } from \"react\";\nimport Api from \"../api/blockchain\";\nimport type {\n    QueryOption,\n    Cell\n} from '../types/blockchain';\nimport CodePiece from './widget/code';\n\nexport type Props = {\n    query: QueryOption\n    length?: number\n};\n\nconst styles = {\n  main: {\n    textAlign: \"left\" as const,\n  },\n  wallet_panel: {\n    width: \"600px\",\n    border: \"1px solid white\",\n    float: \"left\" as const,\n    marginRight: \"20px\",\n    padding: \"10px\",\n    listStyleType: \"none\",\n    overflow: \"hidden\",\n    fontSize: \"10px\",\n    display: \"block\",\n  },\n};\n\nexport default function Cells(props: Props) {\n  const [cells, setCells] = useState([]);\n\n  useEffect(() => {\n    queryCells();\n  }, []);\n\n  async function queryCells() {\n    const api = new Api();\n    const length = props.length || 10;\n    var myCells = await api.getLiveCells(props.query);\n    myCells = myCells.slice(0, length);\n    setCells(\n        myCells.map((cell: Cell, index: number) => {\n        return (\n          <li key={index} style={styles.wallet_panel}>\n            <p>cell {index + 1} : </p>\n            <CodePiece code={ JSON.stringify(cell.cell_output, null, 2) } />\n          </li>\n        );\n      })\n    );\n  }\n\n  return (\n    <div style={styles.main}>\n      {cells}\n      <p style={{clear: \"both\"}} />\n    </div>\n  );\n}\n","/Users/retric/Desktop/ckb-react/src/components/widget/code.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/widget/form.tsx",["67","68","69"],"import React, {useState, useEffect} from \"react\";\nimport CodePiece from './code';\n\nconst styles = {\n    form_box: {\n        border: '1px solid white',\n        padding: '20px'\n    }\n}\n\nexport default function Form(){\n\n    const [input, setInput] = useState();\n\n    const raw_tx_template = `{\n        version: \"0x0\",\n        cell_deps: [\n          {\n            out_point: {\n              tx_hash:\n                \"...\",\n              index: \"...\",\n            },\n            dep_type: \"dep_group\",\n          },\n        ],\n        header_deps: [],\n        inputs: [\n          {\n            since: \"0x0\",\n            previous_output: {\n              tx_hash:\n                \"...\",\n              index: \"...\",\n            },\n          },\n        ],\n        outputs: [\n          {\n            capacity: \"...\",\n            lock: {\n              code_hash:\n                \"...\",\n              hash_type: \"...\",\n              args: \"...\",\n            },\n          },\n        ],\n        outputs_data: [\"...\"]\n};`\n    \n    const handleChange = function(){\n\n    }\n\n    const handleSubmit = function(){\n\n    }\n\n    return(\n      <form onSubmit={handleSubmit} style={styles.form_box}>\n        <CodePiece code={raw_tx_template} isContentEditable={true}></CodePiece>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n}",["70","71"],"/Users/retric/Desktop/ckb-react/src/components/Transaction.tsx",["72"],"import React, { useState, useEffect } from 'react';\nimport Api from '../api/blockchain';\nimport { QueryOption } from '../types/blockchain';\n\nconst styles = {\n    list_panel: {\n        margin: '20px'\n    }\n};\n\nexport type Props = {\n    query: QueryOption,\n    length?: number\n}\n\nexport default function Transaction(props: Props){\n    \n    const [txs, setTxs] = useState([]);\n\n    useEffect(() => {   \n        fetchTransactions();\n    }, []);\n    \n    async function fetchTransactions() {\n        const api = new Api();\n        const length = props.length || 10;\n        var txs = await api.getTransactions(props.query);\n        txs = txs.slice(0, length);\n        setTxs(txs.map((tx:string, index:number) => <li key={index}>{JSON.stringify(tx)}</li>));\n    }\n\n    return(\n        <div style={styles.list_panel}>\n           {txs}\n        </div>\n    )\n}\n\n\n/**   \n * \n * {\n[1]     transaction: {\n[1]       cell_deps: [],\n[1]       hash: '0xac10b54d29cb66c0484faf1e6b1eb1cea4a481c21f1758e82ed6040db1cacfac',\n[1]       header_deps: [],\n[1]       inputs: [Array],\n[1]       outputs: [Array],\n[1]       outputs_data: [Array],\n[1]       version: '0x0',\n[1]       witnesses: [Array]\n[1]     },\n[1]     tx_status: {\n[1]       block_hash: '0x21822a9bc055a6223f45c3311a5802b837e7b441f0e9497d0758d8b29a8e8d9e',\n[1]       status: 'committed'\n[1]     }\n[1]   },\n * \n * \n */","/Users/retric/Desktop/ckb-react/src/components/widget/common_style.ts",[],"/Users/retric/Desktop/ckb-react/src/components/BeforeWeGetStarted.tsx",["73","74"],"/Users/retric/Desktop/ckb-react/src/components/Class1.tsx",["75"],"/Users/retric/Desktop/ckb-react/src/components/Class3.tsx",["76"],"import React from 'react';\nimport styles from './widget/common_style';\n\nexport default function(){\n    return(\n        <div>\n            <div style={styles.content}>\n                <h3 style={styles.main_color}>部署一个合约</h3>\n                <p>敬请期待。</p>\n            </div>\n        </div>\n    )\n}","/Users/retric/Desktop/ckb-react/src/components/Class4.tsx",["77"],"/Users/retric/Desktop/ckb-react/src/components/Class2.tsx",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":36,"column":6,"nodeType":"85","endLine":36,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":26,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"91","line":13,"column":19,"nodeType":"89","messageId":"90","endLine":13,"endColumn":27},{"ruleId":"87","severity":1,"message":"92","line":52,"column":11,"nodeType":"89","messageId":"90","endLine":52,"endColumn":23},{"ruleId":"79","replacedBy":"93"},{"ruleId":"81","replacedBy":"94"},{"ruleId":"83","severity":1,"message":"95","line":22,"column":8,"nodeType":"85","endLine":22,"endColumn":10,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":5,"column":1,"nodeType":"100","endLine":36,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":5,"column":1,"nodeType":"100","endLine":34,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":4,"column":1,"nodeType":"100","endLine":13,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":4,"column":1,"nodeType":"100","endLine":13,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":4,"column":1,"nodeType":"100","endLine":13,"endColumn":2},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'queryCells'. Either include it or remove the dependency array.","ArrayExpression",["103"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setInput' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["101"],["102"],"React Hook useEffect has a missing dependency: 'fetchTransactions'. Either include it or remove the dependency array.",["104"],"'CodePiece' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [queryCells]",{"range":"109","text":"110"},"Update the dependencies array to be: [fetchTransactions]",{"range":"111","text":"112"},[711,713],"[queryCells]",[436,438],"[fetchTransactions]"]