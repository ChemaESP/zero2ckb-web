[{"/Users/retric/Desktop/ckb-react/src/router.tsx":"1","/Users/retric/Desktop/ckb-react/src/api/blockchain.ts":"2","/Users/retric/Desktop/ckb-react/src/components/widget/copy_text.tsx":"3","/Users/retric/Desktop/ckb-react/src/components/widget/fresh_button.tsx":"4","/Users/retric/Desktop/ckb-react/src/types/blockchain.ts":"5","/Users/retric/Desktop/ckb-react/src/components/widget/form.tsx":"6","/Users/retric/Desktop/ckb-react/src/components/widget/code.tsx":"7","/Users/retric/Desktop/ckb-react/src/components/widget/notify.tsx":"8","/Users/retric/Desktop/ckb-react/src/components/widget/common_style.ts":"9","/Users/retric/Desktop/ckb-react/src/index.tsx":"10","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/BeforeWeGetStarted.tsx":"11","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/PreKnowledge.tsx":"12","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/ShowChainInfo.tsx":"13","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/Class1.tsx":"14","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/SendTx.tsx":"15","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/FetchToSignMessage.tsx":"16","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Wallets.tsx":"17","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Cells.tsx":"18","/Users/retric/Desktop/ckb-react/src/components/tutorial/Learn.tsx":"19","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/Class3.tsx":"20","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/show_chain_info/new_blocks.tsx":"21","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/show_chain_info/WalletCells.tsx":"22","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/show_chain_info/ChainConfig.tsx":"23","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/Class2.tsx":"24","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/ToTxHash.tsx":"25","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/show_chain_info/WalletTransaction.tsx":"26","/Users/retric/Desktop/ckb-react/src/components/toolbox/tools/hex2decimal.tsx":"27","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/SeriliazedWitnessArgs.tsx":"28","/Users/retric/Desktop/ckb-react/src/reportWebVitals.ts":"29","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/Signer.tsx":"30","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Blocks.tsx":"31","/Users/retric/Desktop/ckb-react/src/utils/index.ts":"32","/Users/retric/Desktop/ckb-react/src/components/widget/floating_cell/Fcell.jsx":"33","/Users/retric/Desktop/ckb-react/src/components/widget/floating_cell/cell_concept.jsx":"34","/Users/retric/Desktop/ckb-react/src/components/widget/data_grid.tsx":"35","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/Class4.tsx":"36","/Users/retric/Desktop/ckb-react/src/components/home/Home.tsx":"37","/Users/retric/Desktop/ckb-react/src/components/widget/table_of_contents.tsx":"38","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Block.tsx":"39","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Tx.tsx":"40","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Cell.tsx":"41","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Txs.tsx":"42","/Users/retric/Desktop/ckb-react/src/components/toolbox/tools/queryCell.tsx":"43","/Users/retric/Desktop/ckb-react/src/components/toolbox/FloatingBox.tsx":"44","/Users/retric/Desktop/ckb-react/src/components/toolbox/tools/queryTx.tsx":"45","/Users/retric/Desktop/ckb-react/src/components/widget/logo_svg.tsx":"46"},{"size":452,"mtime":1607498994651,"results":"47","hashOfConfig":"48"},{"size":2740,"mtime":1608370664103,"results":"49","hashOfConfig":"48"},{"size":2482,"mtime":1607522635692,"results":"50","hashOfConfig":"48"},{"size":4335,"mtime":1608287363086,"results":"51","hashOfConfig":"48"},{"size":3807,"mtime":1607005039964,"results":"52","hashOfConfig":"48"},{"size":1242,"mtime":1608376621436,"results":"53","hashOfConfig":"48"},{"size":1280,"mtime":1607522277794,"results":"54","hashOfConfig":"48"},{"size":352,"mtime":1607062893360,"results":"55","hashOfConfig":"48"},{"size":1868,"mtime":1608372277717,"results":"56","hashOfConfig":"48"},{"size":513,"mtime":1606567519013,"results":"57","hashOfConfig":"48"},{"size":2244,"mtime":1608265631523,"results":"58","hashOfConfig":"48"},{"size":22041,"mtime":1608376697133,"results":"59","hashOfConfig":"48"},{"size":4168,"mtime":1608376874590,"results":"60","hashOfConfig":"48"},{"size":7419,"mtime":1608273407343,"results":"61","hashOfConfig":"48"},{"size":1121,"mtime":1607499241918,"results":"62","hashOfConfig":"48"},{"size":1532,"mtime":1607767126133,"results":"63","hashOfConfig":"48"},{"size":5735,"mtime":1608399135629,"results":"64","hashOfConfig":"48"},{"size":2011,"mtime":1608374804735,"results":"65","hashOfConfig":"48"},{"size":1016,"mtime":1608383780183,"results":"66","hashOfConfig":"48"},{"size":320,"mtime":1607499429435,"results":"67","hashOfConfig":"48"},{"size":2611,"mtime":1608307619239,"results":"68","hashOfConfig":"48"},{"size":2389,"mtime":1608374190630,"results":"69","hashOfConfig":"48"},{"size":978,"mtime":1608375256205,"results":"70","hashOfConfig":"48"},{"size":692,"mtime":1607499423419,"results":"71","hashOfConfig":"48"},{"size":1124,"mtime":1607499235334,"results":"72","hashOfConfig":"48"},{"size":2684,"mtime":1608374783639,"results":"73","hashOfConfig":"48"},{"size":2452,"mtime":1608393431707,"results":"74","hashOfConfig":"48"},{"size":862,"mtime":1607499260853,"results":"75","hashOfConfig":"48"},{"size":425,"mtime":1606564455869,"results":"76","hashOfConfig":"48"},{"size":1373,"mtime":1607499274285,"results":"77","hashOfConfig":"48"},{"size":2494,"mtime":1608302293194,"results":"78","hashOfConfig":"48"},{"size":468,"mtime":1608216842171,"results":"79","hashOfConfig":"48"},{"size":5643,"mtime":1607583915775,"results":"80","hashOfConfig":"48"},{"size":298,"mtime":1607577304894,"results":"81","hashOfConfig":"48"},{"size":1175,"mtime":1607588520854,"results":"82","hashOfConfig":"48"},{"size":332,"mtime":1607499420003,"results":"83","hashOfConfig":"48"},{"size":430,"mtime":1607767181645,"results":"84","hashOfConfig":"48"},{"size":3107,"mtime":1608376803869,"results":"85","hashOfConfig":"48"},{"size":3179,"mtime":1608306621893,"results":"86","hashOfConfig":"48"},{"size":2163,"mtime":1608374215403,"results":"87","hashOfConfig":"48"},{"size":2880,"mtime":1608358224828,"results":"88","hashOfConfig":"48"},{"size":1235,"mtime":1608379826964,"results":"89","hashOfConfig":"48"},{"size":1458,"mtime":1608397706432,"results":"90","hashOfConfig":"48"},{"size":4399,"mtime":1608435312261,"results":"91","hashOfConfig":"48"},{"size":1473,"mtime":1608398611437,"results":"92","hashOfConfig":"48"},{"size":1493,"mtime":1608435743521,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1x8qy3m",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"132"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"132"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/retric/Desktop/ckb-react/src/router.tsx",[],["212","213"],"/Users/retric/Desktop/ckb-react/src/api/blockchain.ts",[],"/Users/retric/Desktop/ckb-react/src/components/widget/copy_text.tsx",["214"],"/Users/retric/Desktop/ckb-react/src/components/widget/fresh_button.tsx",["215","216"],"/**** \n * improve: \n *  - [x] every button instance of this componet  must create its own isLoading and setIsLoading, this is ugly and unacceptable.\n *  - [ ] should provide css customize option for user\n *  - [ ] try export this as a standalone button for re-use\n */\nimport React, {useState, useEffect, useRef, CSSProperties} from \"react\";\nimport commonStyle from \"./common_style\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./button.css\";\n\nexport type Props = {\n    custom_style?: CSSProperties\n    isLoading?: boolean\n    text: string\n    onClick: () => void\n}\n\nconst styles = {...commonStyle, ...{\n    loader: {\n        border: '4px solid rgba(60, 198, 138, 0.2)',\n        borderLeft: '4px solid',\n        animation: 'load 1s infinite linear',\n        borderRadius: '50%',\n        width: '25px',\n        height: '25px',\n        margin: '0 auto'\n    },\n    btn: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: 'rgb(255,255,255, 0)',\n        cursor: 'pointer'\n    },\n    btndiv: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%'\n    },\n    btn_hover: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: commonStyle.main_color.color,\n        cursor: 'pointer'\n    }\n}}\n\nconst Loader = () => <div style={styles.loader} />;\n\nexport default function FreshButton(props: Props){\n\n    /* Capture the dimensions of the button before the loading happens\n    so it doesn’t change size when showing the loader */\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const ref = useRef<HTMLButtonElement>(null);\n\n\n    const isLoadingMissed = props.isLoading === undefined;\n\n    const [showLoader, setShowLoader] = useState(false);\n    const [isLoading, setIsLoading] = useState( isLoadingMissed ? false : props.isLoading);\n    const [isHover, setIsHover] = useState(false);\n\n    const extendedOnClick = async () => {\n      if(isLoadingMissed)setIsLoading(true);\n      await props.onClick();\n      if(isLoadingMissed)setIsLoading(false);\n    }\n\n    useEffect(() => {\n        if(props.isLoading !== undefined)\n          setIsLoading(props.isLoading);\n\n        if (isLoading) {\n          setShowLoader(true);\n        }\n    \n        // Show loader a bits longer to avoid loading flash\n        if (!isLoading && showLoader) {\n          const timeout = setTimeout(() => {\n            setShowLoader(false);\n          }, 400);\n    \n          return () => {\n            clearTimeout(timeout);\n          };\n        }\n      }, [props.isLoading, isLoading, showLoader]);\n  \n    // Hooks used to fade in/out the loader or the button contents\n    const fadeOutProps = useSpring({ opacity: showLoader ? 1 : 0 });\n    const fadeInProps = useSpring({ opacity: showLoader ? 0 : 1 });\n    \n    /*\n    useEffect(() => {\n        if (ref.current && ref.current.getBoundingClientRect().width) {\n          setWidth(ref.current.getBoundingClientRect().width);\n        }\n        if (ref.current && ref.current.getBoundingClientRect().height) {\n          setHeight(ref.current.getBoundingClientRect().height);\n        }\n      }, [props.text]);\n    */\n\n    const toogleHover = () => {\n        setIsHover(!isHover);\n    }\n\n    const wh_style = width && height\n    ? {\n        width: `${width}px`,\n        height: `${height}px`,\n      }\n    : {};\n    const hover_style = isHover ? styles.btn_hover : styles.btn;\n    const btn_style = {...hover_style, ...wh_style};\n    const mystyle = props.custom_style === \"undefined\" ? {} : props.custom_style; \n    const final_style = {...btn_style, ...mystyle};\n\n    return(\n      <button style={final_style} onClick={extendedOnClick} onMouseEnter={toogleHover} onMouseLeave={toogleHover} ref={ref} >\n      {showLoader ? (\n            <animated.div style={fadeOutProps}>\n              <Loader />\n            </animated.div>\n          ) : (\n            <animated.div style={fadeInProps}>{props.text}</animated.div>\n      )}\n      </button>\n    )\n}",["217","218"],"/Users/retric/Desktop/ckb-react/src/types/blockchain.ts",[],"/Users/retric/Desktop/ckb-react/src/components/widget/form.tsx",["219"],"/Users/retric/Desktop/ckb-react/src/components/widget/code.tsx",["220"],"import React, {Ref, useImperativeHandle, useRef, forwardRef, useState, CSSProperties}  from \"react\";\n\nexport type CodeProp = {\n    code: string | object\n    isContentEditable?: boolean\n    custom_style?: CSSProperties\n}\n\nexport type CodePieceType = {\n    getContent: () => string\n}\n\nconst CodePeice = forwardRef((prop: CodeProp, ref: Ref<CodePieceType>) => { \n    const mystyle = prop.custom_style === \"undefined\" ? {} : prop.custom_style; \n    const styles = {\n        code_box:{...{\n            outline: '0px solid transparent',\n            overflow: 'scroll',\n            border: '1px solid white'\n        }, ...mystyle} \n    };\n\n    const preRef = useRef<HTMLPreElement>(null);\n    \n    const getContent = () => {\n        return preRef.current?.innerText || '';\n    }\n\n    useImperativeHandle(ref, () => ({ getContent }));\n\n    return (\n        <div>\n            <pre ref={preRef} contentEditable={prop.isContentEditable?'true':'false'} onInput={getContent} style={styles.code_box} >\n                { typeof prop.code === 'string' &&\n                    prop.code\n                }\n                { typeof prop.code === 'object' &&\n                    JSON.stringify(prop.code, null, 2)\n                }\n            </pre>\n        </div>\n    )\n})\n\nexport default CodePeice;",["221","222"],"/Users/retric/Desktop/ckb-react/src/components/widget/notify.tsx",["223","224"],"import React, { useRef, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function NotifyPlace(){\n    return(\n        <div>\n            <ToastContainer />\n        </div>\n    )\n}\n\nconst notify = (message: string) => {\n    toast(message);\n}\n\nexport { notify }",["225","226"],"/Users/retric/Desktop/ckb-react/src/components/widget/common_style.ts",[],"/Users/retric/Desktop/ckb-react/src/index.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/BeforeWeGetStarted.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/PreKnowledge.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/ShowChainInfo.tsx",["227","228"],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/Class1.tsx",["229"],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/SendTx.tsx",["230"],"import React, {useState} from 'react';\nimport FreshButton from '../../../widget/fresh_button';\nimport { notify } from '../../../widget/notify';\nimport Api from '../../../../api/blockchain';\n\nimport type {\n    Transaction\n} from '../../../../types/blockchain';\n\nexport type Props = {\n    tx: Transaction | undefined\n}\n\nexport default function SendTx(props: Props){\n    const [isLoading, setIsLoading] = useState(false);\n    const [tx_hash, setTxHash] = useState('');\n\n    const sendTx = async () => {\n        setIsLoading(true);\n        const api = new Api();\n        if(props.tx){\n            const res = await api.sendTx(props.tx);\n            console.log(res);\n            if(res.status == 'ok'){\n                setTxHash(res.data);\n            }\n            else{\n                notify(res.data);\n            }\n        }else{\n            notify('transaction is undefined');\n        }\n        setIsLoading(false);\n    }\n\n    return(\n        <div>\n            <FreshButton isLoading={isLoading} text={'发送交易上链'} onClick={sendTx} ></FreshButton>\n            <p> tx_hash: {tx_hash}</p>\n        </div>\n    )\n}",["231","232"],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/FetchToSignMessage.tsx",["233","234"],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Wallets.tsx",["235","236","237"],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Cells.tsx",["238","239","240"],"import React, { CSSProperties, useEffect, useState } from \"react\";\nimport Api from \"../../../../api/blockchain\";\nimport type {\n    QueryOption,\n    Cell\n} from '../../../../types/blockchain';\nimport SingleCell from './Cell';\nimport FreshButton from '../../../widget/fresh_button';\n\nexport type Props = {\n    query: QueryOption\n    length?: number,\n    render_dep?: any,\n    custom_style?: {\n      btn_style?: CSSProperties\n      layout_style?: CSSProperties\n    },\n    text?: {\n      title?: string\n      btn_text?: string\n    }\n};\n\nconst styles = {\n  main: {\n    textAlign: \"center\" as const,\n    border: '1px solid white',\n    clear: 'both' as const,\n  },\n  cell_panel: {\n    width: \"600px\",\n    border: \"1px solid white\",\n    float: \"left\" as const,\n    marginRight: \"20px\",\n    padding: \"10px\",\n    listStyleType: \"none\",\n    overflow: \"hidden\",\n    fontSize: \"10px\",\n    display: \"block\",\n  },\n  \n};\n\nexport default function Cells(props: Props) {\n  const [cells, setCells] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const btn_style = props.custom_style?.btn_style;\n  const layout_style = props.custom_style?.layout_style;\n\n  useEffect(() => {\n    if(props.render_dep)\n      queryCells();\n  }, [props.render_dep]);\n\n  async function queryCells() {\n    setIsLoading(true);\n    console.log(isLoading);\n    const api = new Api();\n    const length = props.length || 10;\n    var myCells = await api.getLiveCells(props.query, length);\n    setCells(\n        myCells.map((cell: Cell, index: number) => <SingleCell cell={cell} key_id={index} /> )\n    );\n    setIsLoading(false);\n  }\n\n  return (\n    <div style={ layout_style != undefined ? {...styles.main, ...layout_style} : styles.main}>\n      <h4>{props.text?.title}</h4>\n      <FreshButton custom_style={ btn_style != undefined ? btn_style : {}} isLoading={isLoading} onClick={queryCells} text={props.text?.btn_text || ''}></FreshButton>\n      <ul>\n          {cells}\n      </ul>\n      <p style={{clear: \"both\"}} />\n    </div>\n  );\n}\n","/Users/retric/Desktop/ckb-react/src/components/tutorial/Learn.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/Class3.tsx",["241"],"import React from 'react';\nimport styles from '../../widget/common_style';\n\nexport default function(){\n    return(\n        <div>\n            <div style={styles.content}>\n                <h3 style={styles.main_color}>部署一个合约</h3>\n                <p>敬请期待。</p>\n            </div>\n        </div>\n    )\n}","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/show_chain_info/new_blocks.tsx",["242"],"import React, { useState } from 'react';\nimport FreshButton from '../../../widget/fresh_button';\nimport Blocks from '../common/Blocks';\nimport Api from '../../../../api/blockchain';\nimport {notify} from '../../../widget/notify';\nimport type {\n    Block\n} from '../../../../types/blockchain';\nimport common_styles from '../../../widget/common_style';\n\nconst styles = {...common_styles, ...{\n    container: {\n        margin: '20px 0px',\n        clear: 'both' as const\n    },\n    empty_placeholder: {\n        width: '100%',\n        minHeight: '50px',\n        background: 'gray',\n        padding: '20px 0'\n    }\n}}\n\nexport default function NewBlocks (){\n    const [isLoading, setIsLoading] = useState(false);\n    const [blocks, setBlocks] = useState<Block[]>([]);\n\n    const fetchNewBlocks = async () => {\n        setIsLoading(true);\n        const api = new Api();\n        const res = await api.getNewBlocks(9);\n        if(res.status === \"ok\"){\n            const blocks = res.data;\n            console.log(blocks);\n            setBlocks(blocks);\n        }else{\n            notify(JSON.stringify(res));\n        }\n        setIsLoading(false);\n    }\n\n    return(\n        <div style={styles.container}>\n            <div style={common_styles.clear_path}>\n                <div style={{marginBottom: '20px'}}>\n                    <FreshButton isLoading={isLoading} text={'Fetch Blocks'} onClick={fetchNewBlocks} custom_style={{width: '100%', minHeight: '60px', fontSize: '20px'}} ></FreshButton>\n                </div>\n                <Blocks blocks={blocks}></Blocks>\n                <div style={{marginBottom:\"20px\", clear:'both'}}></div>\n                { blocks.length != 0 && \n                    <div style={styles.content}>\n                        <p>\n                            上面每个正方形代表这条链中的一个最新的区块，区块中值得关注的信息是下半部分的交易。<br/><br/>\n                            点击其中任意一条交易，你会看到这条交易的详细内容，以Json的形式。<br/><br/>\n                            你可能会发现，一笔真实的交易，跟我们之前在理论课程中学到的结构有所不同，准确地说是变得更复杂了一些。<br/><br/>\n                            但它并没有逃出 input =》 output 这个本质。<br/><br/>\n                            如果你暂时不知道交易结构里每个字段的意义，不要紧，我们将会在后续慢慢掌握。\n                        </p>\n                        <hr/>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/show_chain_info/WalletCells.tsx",["243","244"],"import React, { useState, useRef, useEffect } from 'react';\nimport Cells from '../common/Cells';\nimport WalletTxs from './WalletTransaction';\nimport type {\n    Wallet\n} from '../../../../types/blockchain'\nimport Select, { ActionMeta, OptionTypeBase, ValueType } from 'react-select';\n\n\nexport type Props = {\n    wallets: Wallet[]\n}\n\nexport type SelectWallet = {\n    value: string\n    label: string\n}\n\nconst styles = {\n    selection_area: {\n        color: 'black'\n    },\n    hidden_btn: {\n      width:'100%', \n      border:'0', \n      backgroundColor: 'rgb(0,0,0, 0)',\n      height: '0',\n      cursor: 'auto'\n    }\n}\n\n/**\n * todo: add balance here. \n */\nexport default function WalletCells( props: Props ){\n    const [wallets, setWallets] = useState<Wallet[]>([]);\n\n    useEffect(() => {\n        setWallets(props.wallets);\n    }, [props.wallets]);\n\n    const [selectedWallet, setSelectedWallet] = useState<string>();\n    const options = wallets.map((w, index) => {\n        return {\n            value: w.lock_arg,\n            label: '钱包' + (index + 1) + ': ' + w.lock_arg\n        }\n    });\n\n    const handlerSelectWallet = (value: ValueType<{\n        value: string;\n        label: string;\n    }, false>, actionMeta: ActionMeta<{\n        value: string;\n        label: string;\n    }>) => {\n        setSelectedWallet(value?.value);\n    }\n\n    return(\n        <div>\n            <p>请选择钱包</p>\n            <div style={styles.selection_area}>\n                <Select options={options} onChange={handlerSelectWallet} />\n            </div>\n            <br/>\n            <Cells query={{lock: {\n                code_hash: '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8',\n                args: selectedWallet || '',\n                hash_type: 'type'\n            }}}  length={12} render_dep={selectedWallet} text={{title:'钱包对应的 live cell', btn_text:''}} custom_style={{btn_style: styles.hidden_btn}} ></Cells>\n\n            <div>\n                <WalletTxs query={{lock: {\n                    code_hash: '0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8',\n                    args: selectedWallet || '',\n                    hash_type: 'type'\n                }}} render_dep={selectedWallet} text={{title:'钱包对应的交易', btn_text:''}} custom_style={{btn_style: styles.hidden_btn}} ></WalletTxs>\n            </div>\n        </div>\n    )\n}\n","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/show_chain_info/ChainConfig.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/Class2.tsx",["245"],"import React from 'react';\nimport styles from '../../widget/common_style';\n\nexport default function(){\n    return(\n        <div>\n            <div style={styles.content}>\n                <h3 style={styles.main_color}>发送多签交易</h3>\n                <p>敬请期待。</p>\n            </div>\n        </div>\n    )\n}\n\n                /** \n                 <ul>\n                    <li>0、学习多签脚本</li>\n                    <li>1、拼接交易的内容</li>\n                    <li>2、对交易进行签名</li>\n                    <li>3、把交易签名放回到交易中</li>\n                    <li>4、把交易发送到链上</li>\n                </ul>\n                */",["246","247"],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/ToTxHash.tsx",["248"],"import React, { useState } from 'react';\nimport Api from '../../../../api/blockchain';\nimport {\n    RawTransaction,\n} from '../../../../types/blockchain';\nimport FreshButton from '../../../widget/fresh_button';\nimport { notify } from '../../../widget/notify';\n\nconst styles = {\n    result: {\n        width: '100%',\n        padding: '10px'\n    }\n}\n\nexport type Props = {\n    raw_tx: RawTransaction | undefined\n}\n\nexport default function ToTxHash(props: Props){\n    const [hash, setHash] = useState('');\n\n    const generateTxHash = async () => {\n        const api = new Api();\n        if(props.raw_tx){\n            const res = await api.generateTxHash(props.raw_tx);\n            if(res.status == 'ok'){\n                setHash(res.data);\n            }\n            else{\n                notify(res.data);\n            }\n        }else{\n            notify('raw transaction is undefined');\n        }\n    }\n\n    return(\n        <div style={styles.result}>\n            <FreshButton text={'生成交易的哈希'} onClick={generateTxHash} />\n            <div >\n                结果：{hash}\n            </div>\n        </div>\n    )\n}","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/show_chain_info/WalletTransaction.tsx",["249"],"import React, { useState, useEffect, CSSProperties } from 'react';\nimport Api from '../../../../api/blockchain';\nimport { QueryOption } from '../../../../types/blockchain';\nimport FreshButton from \"../../../widget/fresh_button\";\nimport commonStyles from \"../../../widget/common_style\";\nimport Txs from '../common/Txs';\n\nconst styles = {...commonStyles, ...{\n    list_panel: {\n        textAlign: 'center' as const,\n        border: '1px solid white',\n    },\n    tx_panel: {\n        width: \"600px\",\n        border: \"1px solid white\",\n        float: \"left\" as const,\n        marginRight: \"20px\",\n        padding: \"10px\",\n        listStyleType: \"none\",\n        overflow: \"scroll\",\n        fontSize: \"10px\",\n        display: \"block\",\n        textAlign: 'left' as const\n    },\n}};\n\nexport type Props = {\n    query: QueryOption,\n    render_dep?: any,\n    length?: number,\n    text?: {\n        title?: string\n        btn_text?: string\n    }\n    custom_style?: {\n        btn_style?: CSSProperties\n        layout_style?: CSSProperties\n    }\n}\n\nexport default function WalletTransaction(props: Props){\n    \n    const [txs, setTxs] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    \n    async function fetchTransactions() {\n        setIsLoading(true);\n        const api = new Api();\n        const length = props.length || 10;\n        var txs = await api.getTransactions(props.query, length);\n        setTxs(txs);\n        setIsLoading(false);\n    }\n\n    useEffect(()=>{\n        if(props.render_dep)\n            fetchTransactions();\n    }, [props.render_dep])\n\n    const btn_style = props.custom_style?.btn_style;\n    const layout_style = props.custom_style?.layout_style;\n    const title = props.text?.title;\n    const btn_text = props.text?.btn_text;\n\n    return(\n        <div style={ layout_style !== undefined ? {...styles.list_panel, ...layout_style} : styles.list_panel}>\n            <h4>{title}</h4>\n            <FreshButton custom_style={btn_style !== undefined ? btn_style : {}} isLoading={isLoading} onClick={fetchTransactions} text={btn_text || ''}></FreshButton>\n           <Txs txs={txs} />\n           <p style={{clear: \"both\"}} />\n        </div>\n    )\n}\n\n\n/**   \n * \n * {\n[1]     transaction: {\n[1]       cell_deps: [],\n[1]       hash: '0xac10b54d29cb66c0484faf1e6b1eb1cea4a481c21f1758e82ed6040db1cacfac',\n[1]       header_deps: [],\n[1]       inputs: [Array],\n[1]       outputs: [Array],\n[1]       outputs_data: [Array],\n[1]       version: '0x0',\n[1]       witnesses: [Array]\n[1]     },\n[1]     tx_status: {\n[1]       block_hash: '0x21822a9bc055a6223f45c3311a5802b837e7b441f0e9497d0758d8b29a8e8d9e',\n[1]       status: 'committed'\n[1]     }\n[1]   },\n * \n * \n */","/Users/retric/Desktop/ckb-react/src/components/toolbox/tools/hex2decimal.tsx",["250"],"/** \n * this is a simple hex to decimal reverse converter component\n * to help user figure out the capacity number.\n*/\n\nimport React, { useState, useRef } from 'react';\nimport FreshButton from '../../widget/fresh_button';\nimport common_style from '../../widget/common_style'; \nimport { CSSProperties } from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n    caculator_box: {\n        border: '1px solid white',\n        padding: '20px'\n    },\n    input: {\n        outline: common_style.main_color.color,\n        padding: '10px',\n        background: 'white',\n        width: '90%',\n        borderRadius: '3px',\n        border: '1px solid white',\n        fontSize: '16px'\n    },\n    btn: {\n        marginRight: '5px'\n    },\n    result: {\n        border: '1px solid white',\n        padding: '10px',\n        fontSize: '16px',\n        width: '90%',\n    }\n}\n\nexport type Hex2DecProps = {\n    custom_style?: CSSProperties\n}\n\nexport default function Hex2Dec(props: Hex2DecProps){\n\n    const { custom_style } = props;\n\n    const ref = useRef<HTMLInputElement>(null);\n    const [isReversed, setIsReversed] = useState(false);\n    const [result, setResult] = useState('');\n\n    const reverse = () => {\n        setIsReversed(!isReversed);\n    }\n\n    const hex2dec = () => {\n        if(ref.current){\n            const hex_data = ref.current.value;\n            setResult( BigInt(hex_data).toString(10) );\n        }else{\n            console.log('something went wrong..');\n        }\n    }\n\n    const dec2hex = () => {\n        if(ref.current){\n            const dec_data = ref.current.value;\n            console.log(dec_data);\n            setResult( '0x' + BigInt(dec_data).toString(16) );\n        }else{\n            console.log('something went wrong..');\n        }\n        \n    }\n\n    return(\n        <div style={ custom_style != undefined ? {...styles.caculator_box, ...custom_style} : styles.caculator_box}>\n            <p>Convert {isReversed?'Decimal':'Hex'} to {isReversed?'Hex':'Decimal'} </p>\n            <input ref={ref} type=\"text\" style={styles.input} placeholder={isReversed?'十进制':'十六进制，以 0x 开头'} />\n            <p>\n                <FreshButton onClick={ isReversed ? dec2hex : hex2dec } text={'转换'} />\n                &#160;\n                <FreshButton onClick={ reverse } text={'对调'} />\n            </p>\n            <div style={styles.result}>\n               结果： {result}\n            </div>\n        </div>\n    )\n}","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/SeriliazedWitnessArgs.tsx",["251"],"import React, {useState} from 'react';\nimport { notify } from '../../../widget/notify';\nimport Api from '../../../../api/blockchain';\nimport Form from '../../../widget/form';\n\nexport default function SeriliazedWitnessArgs(){\n    const [witness, setWitness] = useState('');\n\n    const form_template = `{\n        lock: \"...\"\n    }`\n\n    const seriliazed_witness = async (witnessArgs: string) => {\n        const api = new Api();\n        const res = await api.getSeriliazedWitness(witnessArgs);\n        console.log(res);\n        if(res.status == 'ok'){\n            setWitness(res.data);\n        }\n        else{\n            notify(res.data);\n        }\n    }\n\n    return(\n        <div>\n            <Form form_template={form_template} onSubmit={seriliazed_witness} btn_text={'序列化witnessArgs'}></Form>\n            <p> witness: {witness}</p>\n        </div>\n    )\n}","/Users/retric/Desktop/ckb-react/src/reportWebVitals.ts",[],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/class_1/Signer.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Blocks.tsx",[],"/Users/retric/Desktop/ckb-react/src/utils/index.ts",["252"],"const convertTimestamp = (ts: string | number) => {\n    if(typeof ts === 'string'){\n        return new Date(parseInt(ts)).toLocaleTimeString();\n    }else{\n        return new Date(ts).toLocaleTimeString();\n    }\n}\n\nconst hex2dec =  (num: string) => {\n    return BigInt(num).toString(10);\n}\n\nconst dec2hex = (num: string) => {\n    return BigInt(num).toString(16);\n}\n\n\nexport default {\n    convertTimestamp: convertTimestamp,\n    hex2dec: hex2dec,\n    dec2hex: dec2hex,\n}","/Users/retric/Desktop/ckb-react/src/components/widget/floating_cell/Fcell.jsx",["253"],"import TweenOne from 'rc-tween-one';\nimport React from 'react';\n\nclass GridLayout {\n  constructor(rect, width, height) {\n    this.gridX = Math.floor(width / rect);\n    this.gridY = Math.floor(height / rect);\n    this.cellWidth = width / this.gridX;\n    this.cellHeight = height / this.gridY;\n    this.grid = [];\n    for (let i = 0; i < this.gridY; i += 1) {\n      this.grid[i] = [];\n      for (let s = 0; s < this.gridX; s += 1) {\n        this.grid[i][s] = [];\n      }\n    }\n  }\n\n  getCells = (e) => {\n    const gridArray = [];\n    const w1 = Math.floor((e.x - e.radius) / this.cellWidth);\n    const w2 = Math.ceil((e.x + e.radius) / this.cellWidth);\n    const h1 = Math.floor((e.y - e.radius) / this.cellHeight);\n    const h2 = Math.ceil((e.y + e.radius) / this.cellHeight);\n    for (let c = h1; c < h2; c += 1) {\n      for (let l = w1; l < w2; l += 1) {\n        gridArray.push(this.grid[c][l]);\n      }\n    }\n    return gridArray;\n  }\n\n  hasCollisions = t => (\n    this.getCells(t).some(e => e.some(v => this.collides(t, v)))\n  )\n\n  collides = (t, a) => {\n    if (t === a) {\n      return false;\n    }\n    const n = t.x - a.x;\n    const i = t.y - a.y;\n    const r = t.radius + a.radius;\n    return n * n + i * i < r * r;\n  }\n\n  add = (value) => {\n    this.getCells(value).forEach((item) => {\n      item.push(value);\n    });\n  }\n}\n\nconst getPointPos = (width, height, length) => {\n  const grid = new GridLayout(150, width, height);\n  const posArray = [];\n  const num = 500;\n  const radiusArray = [20, 35, 60];\n  for (let i = 0; i < length; i += 1) {\n    let radius;\n    let pos;\n    let j = 0;\n    for(let j =0; j< num; j+=1) {\n      radius = radiusArray[Math.floor(Math.random() * radiusArray.length)];\n      pos = { x: Math.random() * (width - radius * 2) + radius, y: Math.random() * (height - radius * 2) + radius, radius };\n      if (!grid.hasCollisions(pos)) {\n        break;\n      }\n    }\n    posArray.push(pos);\n    grid.add(pos);\n  }\n  return posArray;\n};\n\nconst getDistance = (t, a) => (Math.sqrt((t.x - a.x) * (t.x - a.x) + (t.y - a.y) * (t.y - a.y)));\n\nclass Point extends React.PureComponent {\n  render() {\n    const { tx, ty, x, y, opacity, backgroundColor, radius, ...props } = this.props;\n    //const capacity = '0x'+Math.random().toString('16').slice(2,8).toUpperCase();\n    let transform;\n    let zIndex = 0;\n    let animation = { \n      y: (Math.random() * 2 - 1) * 50 || 50, \n      duration: 3000, \n      delay:Math.random() * 1000,\n      yoyo: true,\n      repeat: -1,\n    };\n    if (tx && ty) {\n      if (tx !== x && ty !== y) {\n        const distance = getDistance({ x, y }, { x: tx, y: ty });\n        const g = Math.sqrt(2000000 / (0.1 * distance * distance));\n        transform = `translate(${g * (x - tx) / distance}px, ${g * (y - ty) / distance}px)`;\n      } else if (tx === x && ty === y) {\n        transform = `scale(${80 / radius})`;\n        animation = { y: 0, yoyo: false, repeat: 0, duration: 300 };\n        zIndex = 1;\n      }\n    }\n    return (\n      <div\n        style={{\n          left: x - radius,\n          top: y - radius,\n          width: radius * 1.8,\n          height: radius * 1.8,\n          opacity,\n          zIndex,\n          transform,\n        }}\n        {...props}\n      >\n        \n        <TweenOne\n          animation={animation}\n          style={{\n            backgroundColor\n          }}\n          className={`${this.props.className}-child`}\n        >\n          <div className={`${this.props.className}-child-content`}>\n            <div className={`${this.props.className}-child-content-title`}>\n              Cell\n            </div>\n            <hr/>\n            <div className={`${this.props.className}-child-content-data`}>\n              01010101010100010101001010101001000001010101001010010100001010101011111001011010110011001010011111010000110011010111010010110\n            </div>\n          </div>\n        </TweenOne>\n        \n      </div>\n\n    );\n  }\n}\n\nclass LinkedAnimate extends React.Component {\n  static defaultProps = {\n    className: 'linked-animate-demo',\n  };\n\n  num = 50;// 点的个数\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: getPointPos(1280, 600, this.num).map(item => ({\n        ...item,\n        //opacity: Math.random() * 0.2 + 0.05,\n        backgroundColor: `rgb(255,255, 255, 0.0)`,//`rgb(${Math.round(Math.random() * 95 + 160)},255,255)`,\n      })),\n      tx: 0,\n      ty: 0,\n    };\n  }\n\n  onMouseMove = (e) => {\n    const cX = e.clientX;\n    const cY = e.clientY;\n    const boxRect = this.box.getBoundingClientRect();\n    const pos = this.state.data.map((item) => {\n      const { x, y, radius } = item;\n      return { x, y, distance: getDistance({ x: cX - boxRect.x, y: cY - boxRect.y }, { x, y }) - radius };\n    }).reduce((a, b) => {\n      if (!a.distance || a.distance > b.distance) {\n        return b;\n      }\n      return a;\n    });\n    if (pos.distance < 60) {\n      this.setState({\n        tx: pos.x,\n        ty: pos.y,\n      });\n    } else {\n      this.onMouseLeave();\n    }\n  }\n\n  onMouseLeave = () => {\n    this.setState({\n      tx: 0,\n      ty: 0,\n    });\n  }\n\n  render() {\n    const { className } = this.props;\n    const { data, tx, ty } = this.state;\n    return (\n      <div className={`${className}-wrapper`}>\n        <div\n          className={`${className}-box`}\n          ref={(c) => { this.box = c; }}\n          onMouseMove={this.onMouseMove}\n          onMouseLeave={this.onMouseLeave}\n        >\n          {data.map((item, i) => (\n            <Point {...item} tx={tx} ty={ty} key={i.toString()} className={`${className}-block`} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LinkedAnimate;",["254","255"],"/Users/retric/Desktop/ckb-react/src/components/widget/floating_cell/cell_concept.jsx",[],["256","257"],"/Users/retric/Desktop/ckb-react/src/components/widget/data_grid.tsx",["258","259"],"import React from 'react';\nimport { CSSProperties } from '@material-ui/core/styles/withStyles';\n\nexport type ColDef = {\n    id: string\n    label: string\n    width?: string\n    type?: any\n}\n\nexport type RowModel = {\n    id: string\n    value: string\n    type?: any\n}\n\n\nexport type SimpleDataGridProp = {\n    columns: ColDef[]\n    rows: RowModel[]\n    custom_style?: CSSProperties\n}\n\nconst default_style = {\n    width: '100%',\n    height: '400px'\n}\n\nexport function DataGrid (props: SimpleDataGridProp){\n    const styles = {\n        header: {\n            textAlign: 'center' as const,\n            border: '1px solid'\n        }\n    }\n    const {columns, rows} = props;\n    const headers = columns.map( (col: ColDef) => (\n        <span style={ {...styles.header, ...{width: col.width??''}} }> {col.label}  </span>\n    ) );\n    return(\n        <div>\n            <div> \n            </div>\n        </div>\n    )\n}\n\nexport default function SimpleDataGrid(props: SimpleDataGridProp) {\n  const {columns, rows, custom_style} = props;\n  const style = {...default_style, ...custom_style};\n  return (\n    <div style={style}>\n      <DataGrid rows={rows} columns={columns}/>\n    </div>\n  );\n}\n","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/Class4.tsx",["260"],"import React from 'react';\nimport styles from '../../widget/common_style';\n\nexport default function(){\n    return(\n        <div>\n            <div style={styles.content}>\n                <h3 style={styles.main_color}>部署一个可升级的合约</h3>\n                <p>敬请期待。</p>\n            </div>\n        </div>\n    )\n}","/Users/retric/Desktop/ckb-react/src/components/home/Home.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/widget/table_of_contents.tsx",["261"],"import React, { useEffect } from 'react';\nimport './table_of_contents.css';\n\nexport default function TableOfContents(){\n\n    const observe = () => {\n        window.addEventListener('DOMContentLoaded', () => {\n\n            const observer = new IntersectionObserver(entries => {\n                entries.forEach(entry => {\n                    const id = entry.target.getAttribute('id');\n                    if (entry.intersectionRatio > 0) {\n                        document.querySelector(`nav li a[href=\"#${id}\"]`)?.parentElement?.classList.add('active');\n                    } else {\n                        document.querySelector(`nav li a[href=\"#${id}\"]`)?.parentElement?.classList.remove('active');\n                    }\n                });\n            });\n        \n            // Track all sections that have an `id` applied\n            document.querySelectorAll('section[id]').forEach((section) => {\n                observer.observe(section);\n            });\n            \n        });\n    }\n\n    useEffect(()=>{\n        //observe();\n    }, [])\n\n    return(\n        <div className=\"main-nav-container\">\n            <nav className=\"section-nav\">\n\t\t        <ol>\n\t\t        \t<li><a href=\"#beforewegetstarted\">Before We Get Started</a></li>\n\t\t        \t<li><a href=\"#preknowledge\">第一步：理论知识</a>\n\t\t        \t\t<ul>\n\t\t        \t\t\t<li><a href=\"#ckbconcept\">让我们以一种简化的方式来理解CKB</a></li>\n\t\t        \t\t\t<li><a href=\"#howtoownacell\">怎样才能拥有一个 Cell</a></li>\n\t\t        \t\t\t<li><a href=\"#endpoints--city-detail\">怎么知道你的Cell属于你？</a></li>\n\t\t        \t\t\t<li><a href=\"#endpoints--city-config\">课间休息</a></li>\n\t\t        \t\t\t<li><a href=\"#endpoints--city-spots-overview\">真正的代码藏在哪里？</a></li>\n\t\t        \t\t\t<li><a href=\"#endpoints--city-spot-detail\">锁的代码如果丢了怎么办？</a></li>\n\t\t        \t\t\t<li><a href=\"#endpoints--city-icons-overview\">交易就是销毁一些盒子，再创造一些盒子</a></li>\n\t\t        \t\t\t<li><a href=\"#endpoints--city-icon-detail\">type 锁的作用</a></li>\n                            <li><a href=\"#endpoints--city-config\">课间休息</a></li>\n\t\t        \t\t</ul>\n\t\t        \t</li>\n\t\t        \t<li><a href=\"#handson\">第二步：动手实践</a>\n                        <ul>\n                            <li><a href=\"#expanders\">观察一条链</a></li>\n\t\t        \t\t\t<li><a href=\"#howtoownacell\">发送一笔交易</a>\n                                <ul>\n                                    <li><a href=\"#endpoints--city-detail\">拼接一个最简单的转账交易</a></li>\n\t\t        \t\t\t        <li><a href=\"#endpoints--city-config\">对交易进行签名</a></li>\n\t\t        \t\t\t        <li><a href=\"#endpoints--city-spots-overview\">把交易签名放回到交易中</a></li>\n\t\t        \t\t\t        <li><a href=\"#endpoints--city-spot-detail\">把交易发送到链上</a></li>\n                                </ul>\n                            </li>\n\t\t        \t\t</ul>\n                    </li>\n\t\t        \t<li><a href=\"#filters\">Filters</a></li>\n\t\t        </ol>\n\t        </nav>\n        </div>\n    )\n}","/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Block.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Tx.tsx",["262","263"],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Cell.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/tutorial/sections/common/Txs.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/toolbox/tools/queryCell.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/toolbox/FloatingBox.tsx",["264","265","266","267"],"/Users/retric/Desktop/ckb-react/src/components/toolbox/tools/queryTx.tsx",[],"/Users/retric/Desktop/ckb-react/src/components/widget/logo_svg.tsx",[],{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":20,"column":25,"nodeType":"274","messageId":"275","endLine":20,"endColumn":39},{"ruleId":"272","severity":1,"message":"276","line":64,"column":19,"nodeType":"274","messageId":"275","endLine":64,"endColumn":27},{"ruleId":"272","severity":1,"message":"277","line":65,"column":20,"nodeType":"274","messageId":"275","endLine":65,"endColumn":29},{"ruleId":"268","replacedBy":"278"},{"ruleId":"270","replacedBy":"279"},{"ruleId":"272","severity":1,"message":"280","line":1,"column":26,"nodeType":"274","messageId":"275","endLine":1,"endColumn":35},{"ruleId":"272","severity":1,"message":"281","line":1,"column":62,"nodeType":"274","messageId":"275","endLine":1,"endColumn":70},{"ruleId":"268","replacedBy":"282"},{"ruleId":"270","replacedBy":"283"},{"ruleId":"272","severity":1,"message":"284","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":23},{"ruleId":"272","severity":1,"message":"281","line":1,"column":25,"nodeType":"274","messageId":"275","endLine":1,"endColumn":33},{"ruleId":"268","replacedBy":"285"},{"ruleId":"270","replacedBy":"286"},{"ruleId":"272","severity":1,"message":"287","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":12,"column":1,"nodeType":"290","endLine":89,"endColumn":2},{"ruleId":"291","severity":1,"message":"292","line":181,"column":43,"nodeType":"293","messageId":"294","endLine":181,"endColumn":47},{"ruleId":"295","severity":1,"message":"296","line":24,"column":27,"nodeType":"297","messageId":"294","endLine":24,"endColumn":29},{"ruleId":"268","replacedBy":"298"},{"ruleId":"270","replacedBy":"299"},{"ruleId":"272","severity":1,"message":"300","line":3,"column":5,"nodeType":"274","messageId":"275","endLine":3,"endColumn":14},{"ruleId":"272","severity":1,"message":"301","line":6,"column":5,"nodeType":"274","messageId":"275","endLine":6,"endColumn":9},{"ruleId":"272","severity":1,"message":"302","line":12,"column":7,"nodeType":"274","messageId":"275","endLine":12,"endColumn":19},{"ruleId":"303","severity":1,"message":"304","line":133,"column":8,"nodeType":"305","endLine":133,"endColumn":10,"suggestions":"306"},{"ruleId":"295","severity":1,"message":"307","line":151,"column":41,"nodeType":"297","messageId":"294","endLine":151,"endColumn":43},{"ruleId":"303","severity":1,"message":"308","line":54,"column":6,"nodeType":"305","endLine":54,"endColumn":24,"suggestions":"309"},{"ruleId":"295","severity":1,"message":"307","line":69,"column":31,"nodeType":"297","messageId":"294","endLine":69,"endColumn":33},{"ruleId":"295","severity":1,"message":"307","line":71,"column":45,"nodeType":"297","messageId":"294","endLine":71,"endColumn":47},{"ruleId":"288","severity":1,"message":"289","line":4,"column":1,"nodeType":"290","endLine":13,"endColumn":2},{"ruleId":"295","severity":1,"message":"307","line":50,"column":33,"nodeType":"297","messageId":"294","endLine":50,"endColumn":35},{"ruleId":"272","severity":1,"message":"284","line":1,"column":27,"nodeType":"274","messageId":"275","endLine":1,"endColumn":33},{"ruleId":"272","severity":1,"message":"310","line":7,"column":30,"nodeType":"274","messageId":"275","endLine":7,"endColumn":44},{"ruleId":"288","severity":1,"message":"289","line":4,"column":1,"nodeType":"290","endLine":13,"endColumn":2},{"ruleId":"268","replacedBy":"311"},{"ruleId":"270","replacedBy":"312"},{"ruleId":"295","severity":1,"message":"296","line":27,"column":27,"nodeType":"297","messageId":"294","endLine":27,"endColumn":29},{"ruleId":"303","severity":1,"message":"313","line":58,"column":8,"nodeType":"305","endLine":58,"endColumn":26,"suggestions":"314"},{"ruleId":"295","severity":1,"message":"307","line":73,"column":35,"nodeType":"297","messageId":"294","endLine":73,"endColumn":37},{"ruleId":"295","severity":1,"message":"296","line":17,"column":23,"nodeType":"297","messageId":"294","endLine":17,"endColumn":25},{"ruleId":"288","severity":1,"message":"315","line":18,"column":1,"nodeType":"290","endLine":22,"endColumn":2},{"ruleId":"316","severity":1,"message":"317","line":62,"column":9,"nodeType":"274","messageId":"275","endLine":62,"endColumn":10},{"ruleId":"268","replacedBy":"278"},{"ruleId":"270","replacedBy":"279"},{"ruleId":"268","replacedBy":"298"},{"ruleId":"270","replacedBy":"299"},{"ruleId":"272","severity":1,"message":"318","line":36,"column":21,"nodeType":"274","messageId":"275","endLine":36,"endColumn":25},{"ruleId":"272","severity":1,"message":"319","line":37,"column":11,"nodeType":"274","messageId":"275","endLine":37,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":4,"column":1,"nodeType":"290","endLine":13,"endColumn":2},{"ruleId":"272","severity":1,"message":"320","line":6,"column":11,"nodeType":"274","messageId":"275","endLine":6,"endColumn":18},{"ruleId":"272","severity":1,"message":"321","line":4,"column":5,"nodeType":"274","messageId":"275","endLine":4,"endColumn":26},{"ruleId":"295","severity":1,"message":"307","line":56,"column":26,"nodeType":"297","messageId":"294","endLine":56,"endColumn":28},{"ruleId":"322","severity":1,"message":"323","line":89,"column":29,"nodeType":"324","endLine":89,"endColumn":56},{"ruleId":"322","severity":1,"message":"323","line":92,"column":29,"nodeType":"324","endLine":92,"endColumn":54},{"ruleId":"322","severity":1,"message":"323","line":95,"column":29,"nodeType":"324","endLine":95,"endColumn":54},{"ruleId":"322","severity":1,"message":"323","line":98,"column":29,"nodeType":"324","endLine":98,"endColumn":56},"no-native-reassign",["325"],"no-negated-in-lhs",["326"],"@typescript-eslint/no-unused-vars","'setPlaceholder' is assigned a value but never used.","Identifier","unusedVar","'setWidth' is assigned a value but never used.","'setHeight' is assigned a value but never used.",["325"],["326"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["325"],["326"],"'useRef' is defined but never used.",["325"],["326"],"'WalletTxs' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-eval","eval can be harmful.","CallExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["325"],["326"],"'HexString' is defined but never used.","'Cell' is defined but never used.","'wallet_arcii' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchWallets'. Either include it or remove the dependency array.","ArrayExpression",["327"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'queryCells'. Either include it or remove the dependency array.",["328"],"'OptionTypeBase' is defined but never used.",["325"],["326"],"React Hook useEffect has a missing dependency: 'fetchTransactions'. Either include it or remove the dependency array.",["329"],"Assign object to a variable before exporting as module default","no-unused-vars","'j' is assigned a value but never used.","'rows' is assigned a value but never used.","'headers' is assigned a value but never used.","'observe' is assigned a value but never used.","'TransactionWithStatus' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},"Update the dependencies array to be: [fetchWallets]",{"range":"336","text":"337"},"Update the dependencies array to be: [props.render_dep, queryCells]",{"range":"338","text":"339"},"Update the dependencies array to be: [fetchTransactions, props.render_dep]",{"range":"340","text":"341"},[4384,4386],"[fetchWallets]",[1227,1245],"[props.render_dep, queryCells]",[1550,1568],"[fetchTransactions, props.render_dep]"]